# This is a basic workflow to help you get started with Actions

name: Main pipeline

env:
  cooperative_geo_filename: 'cooperative_habitation_suisse.geojson'

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Push of this file
  push:
    paths:
      - .github/workflows/main.yml
      - scripts/overpass_query
  # Every week, at 6 am on Sunday
  schedule:
    - cron: '0 6 * * 0'

jobs:
  build:
    runs-on: ubuntu-24.04

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install dependencies
        run: |
          sudo apt-get install jq
          sudo apt-get install moreutils
          sudo apt install nodejs
          npm install -g osmtogeojson

      - name: Ensure data folder exist
        run: |
          mkdir -p data

      - name: Download overpass data and convert to geojson
        run: |
          curl -d "$(<scripts/overpass_query)" -X POST http://overpass.osm.ch/api/interpreter \
          | osmtogeojson > data/$cooperative_geo_filename

      - name: Get list of cooperative owners
        run: |
          jq -rf scripts/list_owners.jq data/$cooperative_geo_filename \
          | jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' \
          > data/list_owners.csv

      - name: Get list of cooperative operators
        run: |
          jq -rf scripts/list_operators.jq data/$cooperative_geo_filename \
          | jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' \
          > data/list_operators.csv
          

      - name: Update readme cooperative'list
        run: |
          REPLACEWITH="$(jq -rf scripts/list_owners.jq data/$cooperative_geo_filename | jq -r '.[] | if .website != null then "* [\(.name)](\(.website))" else "* \(.name)" end')"
          awk --version
          awk -v REPLACEWITH=$REPLACEWITH '
            BEGIN       {p=1}
            /^<!-- start_list_cooperatives -->/   {echo;echo "$(REPLACEWITH)";p=0}
            /^<!-- end_list_cooperatives -->/     {p=1}
            p' README.md

      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Weekly geojson update'
