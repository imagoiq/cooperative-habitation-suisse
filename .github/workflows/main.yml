name: Output update

env:
  output_dir: '/output'
  overpass_server: 'http://overpass.osm.ch'
  cooperative_buildings_filename: 'swiss_housing_cooperative_buildings.geojson'
  cooperative_areas_filename: 'swiss_housing_cooperative_areas.geojson'


on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Push of this file
  push:
    paths:
      - ./**
      - '!./cache/**'
  # Every week, at 6 am on Sunday
  schedule:
    - cron: '0 6 * * 0'

jobs:
  build:
    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: .github/workflows

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install dependencies
        run: |
          sudo apt-get install jq
          sudo apt-get install moreutils
          sudo apt install nodejs
          npm install -g osmtogeojson

      - name: Download buildings overpass data and convert to geojson
        run: ./scripts/download_geojson_overpass.sh "./query/overpass_query_buildings" "$output_dir/$cooperative_buildings_filename"

      - name: Enhance overpass data with nominatim to retrieve addresses of buildings without tags
        run: |
          node ./scripts/add_addresses_with_reverse_geocoding.mjs "$output_dir/$cooperative_buildings_filename" "'./cache/cached_features_addresses.json"

      - name: Download areas overpass data and convert to geojson
        run: ./scripts/download_geojson_overpass.sh "./query/overpass_query_areas" "$output_dir/$cooperative_areas_filename"

      - name: Get list of cooperative owners
        run: |
          jq -rf ./scripts/list_owners.jq $output_dir/$cooperative_buildings_filename \
          | jq -r -L. 'include "./scripts/json2tsv"; json2tsv' > $output_dir/swiss_housing_cooperative_list_owners.tsv

      - name: Get list of cooperative operators
        run: |
          jq -rf ./scripts/list_operators.jq $output_dir/$cooperative_buildings_filename \
          | jq -r -L. 'include "./scripts/json2tsv"; json2tsv' > $output_dir/swiss_housing_cooperative_list_operators.tsv

      - name: Update readme cooperative'list
        run: |
          jq -rf ./scripts/list_owners.jq $output_dir/$cooperative_buildings_filename \
          | jq -r '.[] | if .website != null then "* [\(.name)](\(.website))" else "* \(.name)" end' \
          > list_cooperative.md
          npx inject-markdown README.md
          npx inject-markdown README.fr.md
          rm -rf list_cooperative.md

      # Commit all changed files back to the repository
      - name: Set commit_message variable
        run: |
          if [${{ github.event_name == 'schedule'}}]; then
            echo "COMMIT_MSG=Weekly update" >> $GITHUB_ENV
          elif [${{ github.event_name == 'push'}}]; then
            echo "COMMIT_MSG=Scripts update" >> $GITHUB_ENV
          else
            echo "COMMIT_MSG=Manual update" >> $GITHUB_ENV
          fi

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ env.COMMIT_MSG }}
