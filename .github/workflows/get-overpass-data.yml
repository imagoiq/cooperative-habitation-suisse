# This is a basic workflow to help you get started with Actions

name: Get overpass data

env:
  overpass_query: 'https://overpass.osm.ch/api/interpreter?data=%5Bout%3Ajson%5D%5Btimeout%3A25000%5D%3B%0A%28%0A%20%20nwr%5B%22owner%3Atype%22%3D%22cooperative%22%5D%5B%22building%22~%22%5E%28residental%7Capartments%29%24%22%5D%2846.160809861457125%2C6.098785400390625%2C46.976504510552%2C7.230377197265624%29%3B%0A%20%20nwr%5B%22owner%3Atype%22%3D%22cooperative%22%5D%5B%22landuse%22%3D%22residential%22%5D%2846.160809861457125%2C6.098785400390625%2C46.976504510552%2C7.230377197265624%29%3B%0A%20%20nwr%5B%22operator%3Atype%22%3D%22cooperative%22%5D%5B%22building%22~%22%5E%28residental%7Capartments%29%24%22%5D%2846.160809861457125%2C6.098785400390625%2C46.976504510552%2C7.230377197265624%29%3B%0A%20%20nwr%5B%22operator%3Atype%22%3D%22cooperative%22%5D%5B%22landuse%22%3D%22residential%22%5D%2846.160809861457125%2C6.098785400390625%2C46.976504510552%2C7.230377197265624%29%3B%0A%29%3B%0A%0A%28._%3B%3E%3B%29%3B%0Aout%20body%3B'
  cooperative_geo_filename: 'cooperative_habitation_suisse.geojson'

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Every week, at 6 am on Sunday
  schedule:
   - cron: '0 6 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install dependencies
        run: |
          sudo apt-get install jq
          sudo apt install nodejs
          npm install -g osmtogeojson

      - name: Download overpass data and convert to geojson
        run: |
          curl $overpass_query | osmtogeojson > $cooperative_geo_filename

      - name: Get list of cooperative owners
        run: |
          jq '[.features[] | select(.properties."owner:type" == "cooperative")] \
          | group_by(.properties.owner) \
          | map({ wikidata: .[0].properties."owner:wikidata",name: .[0].properties.owner, short: .[0].properties."owner:short", abbr: .[0].properties."owner:abbr",website: .[0].properties."owner:website", buildings_count: (select(.[0].properties.building != null) | length)  })' \
          cooperative_geo_filename > list_owner.geojson
          
      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Weekly geojson update'
